<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Register Admin</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous" />
</head>

<body>
  <div class="container">
    <h3>Register Admin</h3>

    <div id="alertMessagesDiv" role="alert">
      <span id="alertMessages"></span>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>

    <form id="createPrivateAdminForm">
      <div class="form-row">
        <div class="form-group col-md-6">
          <label for="name" class="form-label">Name<span>*</span></label>
          <input type="text" class="form-control" name="name" id="name" placeholder="John Smith" />
        </div>

        <div class="form-goup col-md-6"></div>

        <div class="form-group col-md-6">
          <label for="email" class="form-label">Email address<span>*</span></label>
          <input type="email" class="form-control" name="email" id="email" placeholder="johnsmith@abc.com" />
        </div>
        <div class="form-goup col-md-6"></div>

        <div class="form-group col-md-6">
          <label for="password" class="form-label">Password<span>*</span></label>
          <input type="password" class="form-control" name="password" id="password" />
        </div>
        <div class="form-goup col-md-6"></div>

        <div class="form-group col-md-6">
          <label for="confirmPassword" class="form-label">Confirm Password<span>*</span></label>
          <input type="password" class="form-control" name="confirmPassword" id="confirmPassword" />
        </div>
        <div class="form-goup col-md-6"></div>

        <div class="form-group col-md-6">
          <label for="privateKey" class="form-label">Private Key<span>*</span></label>
          <input type="password" class="form-control" name="privateKey" id="privateKey" />
        </div>
        <div class="form-goup col-md-6"></div>

        <div class="form-group form-check col-md-6">
          <label for="status" class="form-label col-md-2" value="1">Status<span>*</span></label>
          <label class="form-check-label col-md-2"><input class="form-check-input" type="radio" name="status"
              value="1" />Active</label>
          <label class="form-check-label col-md-2"><input class="form-check-input" type="radio" name="status"
              value="0" />Inactive</label>
        </div>
        <div class="form-goup col-md-6"></div>

        <button type="button" onclick="return redirect(form)" class="btn btn-primary mb-2">
          Submit
        </button>
      </div>
    </form>
  </div>
  <script>
    const createAdminReqUrl = "<%= createAdminReqUrl %>";

    function redirect(form) {
      // destructuring object properties
      const {
        name: { value: name },
        email: { value: email },
        password: { value: password },
        confirmPassword: { value: confirmPassword },
        privateKey: { value: privateKey },
        status: { value: status },
      } = form;
      const isValid = validateForm(
        name,
        email,
        password,
        confirmPassword,
        status
      );

      if (isValid) {
        document.getElementById("createPrivateAdminForm").reset();
        axios
          .post(createAdminReqUrl, {
            name,
            email,
            password,
            confirmPassword,
            privateKey,
            status,
          })
          .then((res) => {
            const alertMessagesDiv =
              document.getElementById("alertMessagesDiv");
            const spanElem = document.getElementById("alertMessages");
            spanElem.innerHTML = res.data.message;
            alertMessagesDiv.setAttribute(
              "class",
              "alert alert-success alert-dismissible fade show"
            );
          })
          .catch((err) => {
            const alertMessagesDiv =
              document.getElementById("alertMessagesDiv");
            const spanElem = document.getElementById("alertMessages");
            spanElem.innerHTML = err.response.data.message
              ? err.response.data.message
              : err.message;
            alertMessagesDiv.setAttribute(
              "class",
              "alert alert-danger alert-dismissible fade show"
            );
          });
      } else {
        return alert("Form not submitted");
      }
    }

    function validateForm(
      name,
      email,
      password,
      confirmPassword,
      status,
      privateKey
    ) {
      const alertMessagesDiv = document.getElementById("alertMessagesDiv");
      const spanElem = document.getElementById("alertMessages");

      const errorMsgs = [];
      let isValid = true;
      const regex = /^\w+[\w-+\.]*\@\w+([-\.]\w+)*\.[a-zA-Z]{2,}$/;
      if (name === "") {
        errorMsgs.push("Name is required.");
        isValid = false;
      } else if (name.length < 3) {
        errorMsgs.push("Name should be atleast 3 characters long");
        isValid = false;
      }

      if (email === "") {
        errorMsgs.push("Email is required.");
        isValid = false;
      } else if (!email.match(regex)) {
        isValid = false;
      }

      if (password === "") {
        errorMsgs.push("Password is required.");
        isValid = false;
      } else if (password.length < 8) {
        errorMsgs.push("Password should be atleast 8 characters long");
        isValid = false;
      }

      if (confirmPassword === "") {
        errorMsgs.push("Confirm pssword is required.");
        isValid = false;
      } else if (confirmPassword !== password) {
        errorMsgs.push("Passwords do not match");
        isValid = false;
      }

      if (privateKey === "") {
        errorMsgs.push("Private key is required.");
        isValid = false;
      }

      if (status === "") {
        errorMsgs.push("Status is required.");
        isValid = false;
      }

      errorMsgs.forEach((e) => {
        spanElem.innerHTML += `${e}<br/>`;
        alertMessagesDiv.setAttribute(
          "class",
          "alert alert-warning alert-dismissible fade show"
        );
      });

      return isValid;
    }
  </script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
    crossorigin="anonymous"></script>
</body>

</html>